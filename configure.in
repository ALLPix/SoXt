dnl ************************************************************************
dnl * SoXt/configure.in
dnl ************************************************************************

AC_INIT(src/Inventor/Xt/SoXt.h)

dnl ************************************************************************
dnl * accommodate for changes in the CVS repository structure...

sim_ac_cvs_syncproblem=false;

if test ! -f ${srcdir}/examples/ChangeLog; then
  if test "x${with_auto_cvs_update+set}" = "xset"; then
    echo "Trying to honor the --with-auto-cvs-update option."
    sim_ac_save_cwd="`pwd`"
    cd ${srcdir}
    if test ! -d ./examples -o ! -f ./CVS/Entries; then
      AC_MSG_ERROR([something failed horribly - can't do auto-cvs-update])
    fi
    grep -v "^D/examples/" CVS/Entries > /tmp/SoXt-CVS-Entries.$$
    cp /tmp/SoXt-CVS-Entries.$$ CVS/Entries
    rm /tmp/SoXt-CVS-Entries.$$
    rm -rf examples
    cvs co SoXtExamples
    cd ${sim_ac_save_cwd}
    echo "Done.  Proceeding..."
  fi
fi

if test ! -f ${srcdir}/examples/ChangeLog; then
  echo ""
  echo "  You appear to have an old setup of the SoXt source repository."
  echo "  Parts of it have changed structurally, and you need to do the"
  echo "  following in the SoXt source directory:"
  echo ""
  echo "    \$ grep -v \"^D/examples/\" CVS/Entries > /tmp/SoXt-CVS-Entries"
  echo "    \$ cp /tmp/SoXt-CVS-Entries CVS/Entries"
  echo "    \$ rm /tmp/SoXt-CVS-Entries"
  echo "    \$ rm -rf examples"
  echo "    \$ cvs co SoXtExamples"
  echo ""
  echo "  You can also run configure with the option --with-auto-cvs-update"
  echo "  to allow the configure script to try to take care of this.  This"
  echo "  option is very experimental and should not be used if you use"
  echo "  configure in a way that may be considered \"weird\" in any way."
  echo ""
  sim_ac_cvs_syncproblem=true
fi

if test "x$sim_ac_cvs_syncproblem" = "xtrue"; then
  exit
fi

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

SOXT_MAJOR_VERSION=0
SOXT_MINOR_VERSION=1
SOXT_MICRO_VERSION=0
SOXT_INTERFACE_AGE=0
SOXT_BINARY_AGE=0
SOXT_VERSION=$SOXT_MAJOR_VERSION.$SOXT_MINOR_VERSION.$SOXT_MICRO_VERSION

AC_SUBST(SOXT_MAJOR_VERSION)
AC_SUBST(SOXT_MINOR_VERSION)
AC_SUBST(SOXT_MICRO_VERSION)
AC_SUBST(SOXT_VERSION)
AC_SUBST(SOXT_INTERFACE_AGE)
AC_SUBST(SOXT_BINARY_AGE)

LT_RELEASE=$SOXT_MAJOR_VERSION.$SOXT_MINOR_VERSION
LT_CURRENT=`expr $SOXT_MICRO_VERSION - $SOXT_INTERFACE_AGE`
LT_REVISION=$SOXT_INTERFACE_AGE
LT_AGE=`expr $SOXT_BINARY_AGE - $SOXT_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SOXT_VERSION

AM_INIT_AUTOMAKE(libSoXt,$SOXT_VERSION)
AM_CONFIG_HEADER(config.h)

AM_DISABLE_STATIC
AM_MAINTAINER_MODE
AC_PROG_LIBTOOL

dnl * The ld tests generates an a.out file that isn't removed afterwards,
dnl * which is very annoying for a bloke like me, so we remove it manually...
rm -f a.out

dnl *******************************************************************
dnl * Search and set up necessary stuff to use Open Inventor with 
dnl * "native" InventorXt.
dnl *******************************************************************

# For Open Inventor linkage, we need to check for a shitload of libraries.

SIM_CHECK_DL
SIM_CHECK_X11
if test x"$sim_ac_x11_avail" = xyes; then
  SIM_CHECK_X11SHMEM
  SIM_CHECK_X11MU
  SIM_CHECK_X11XID
fi

SIM_CHECK_OPENGL( , AC_MSG_ERROR(needs an OpenGL-compatible development system installation))

SIM_CHECK_COIN( , AC_MSG_ERROR(couldn't compile and link with Coin))
LIBS="$LIBS $sim_ac_coin_libs"

SIM_CHECK_X_INTRINSIC
SIM_CHECK_MOTIF( , AC_MSG_ERROR(couldn't compile and link with Motif))
SIM_CHECK_MOTIF_GLWIDGET( , AC_MSG_ERROR(couldn't find Xt/Motif support for GL))

CXXFLAGS="$CXXFLAGS -DSOXT_DEBUG=1"

dnl ************************************************************************

dnl * --with-test-code is a silent option
AM_CONDITIONAL(BUILD_TESTS, test "x${with_test_code+set}" = "xset")

AM_CONDITIONAL(BUILD_EXAMPLES, true)

AM_CONDITIONAL(HAVE_RENDERAREA, true)
AM_CONDITIONAL(HAVE_EXAMINERVIEWER, true)
AM_CONDITIONAL(HAVE_PLANEVIEWER, false)
AM_CONDITIONAL(HAVE_WALKVIEWER, false)
AM_CONDITIONAL(HAVE_FLYVIEWER, false)

dnl ************************************************************************

GUI="Xt"
lGUI="xt"
uGUI="XT"
WIDGET="Widget"
EVENT="XAnyEvent *"
COMPONENTHEADER=""

AC_SUBST(GUI)
AC_SUBST(lGUI)
AC_SUBST(uGUI)
AC_SUBST(WIDGET)
AC_SUBST(EVENT)
AC_SUBST(COMPONENTHEADER)

dnl ************************************************************************
dnl * finally generate all the directories, makefiles, autogenerated
dnl * sourcefiles, and config headers.
dnl ************************************************************************

dnl * automake bugfix
test -d src || mkdir src
test -d src/Inventor || mkdir src/Inventor
test -d src/Inventor/Xt || mkdir src/Inventor/Xt

AC_OUTPUT([
Makefile
soxt-config
src/Inventor/Xt/Makefile
src/Inventor/Xt/SoXtRenderArea.h:src/Inventor/Xt/common/SoAnyRenderArea.h.in
src/Inventor/Xt/SoXtRenderArea.cpp:src/Inventor/Xt/common/SoAnyRenderArea.cpp.in
src/Inventor/Xt/common/Makefile
src/Inventor/Xt/devices/Makefile
src/Inventor/Xt/viewers/Makefile
src/Inventor/Xt/viewers/SoXtViewer.h:src/Inventor/Xt/common/SoAnyViewer.h.in
src/Inventor/Xt/viewers/SoXtViewer.cpp:src/Inventor/Xt/common/SoAnyViewer.cpp.in
src/Inventor/Xt/widgets/Makefile
test-code/Makefile
test-code/widgets/Makefile
examples/Makefile
examples/components/Makefile
examples/components/renderarea.cpp
examples/components/examinerviewer.cpp
examples/components/planeviewer.cpp
examples/components/walkviewer.cpp
examples/components/flyviewer.cpp
])

echo "
Now, run 'make install' to build and install So$GUI.
"

dnl ************************************************************************
