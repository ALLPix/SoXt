dnl ************************************************************************
dnl * SoXt/configure.in
dnl ************************************************************************

AC_INIT(src/Inventor/Xt/SoXt.h)

dnl ************************************************************************
dnl * accommodate for changes in the CVS repository structure...

sim_ac_cvs_syncproblem=false;
sim_ac_examples_check_file=${srcdir}/examples/configure.in

if test ! -f $sim_ac_examples_check_file; then
  if test "x${with_auto_cvs_update+set}" = "xset"; then
    echo "Trying to honor the --with-auto-cvs-update option."
    sim_ac_save_cwd="`pwd`"
    cd ${srcdir}
    if test ! -d ./examples -o ! -f ./CVS/Entries; then
      AC_MSG_ERROR([something failed horribly - can't do auto-cvs-update])
    fi
    grep -v "^D/examples/" CVS/Entries > /tmp/SoXt-CVS-Entries.$$
    cp /tmp/SoXt-CVS-Entries.$$ CVS/Entries
    rm /tmp/SoXt-CVS-Entries.$$
    rm -rf examples
    cvs co SoXtExamples
    cd ${sim_ac_save_cwd}
    echo "Done.  Proceeding..."
  fi
fi

if test ! -f $sim_ac_examples_check_file; then
  echo ""
  echo "  You appear to have an old setup of the SoXt source repository."
  echo "  Parts of it have changed structurally, and you need to do the"
  echo "  following in the SoXt source directory:"
  echo ""
  echo "    \$ grep -v \"^D/examples/\" CVS/Entries > /tmp/SoXt-CVS-Entries"
  echo "    \$ cp /tmp/SoXt-CVS-Entries CVS/Entries"
  echo "    \$ rm /tmp/SoXt-CVS-Entries"
  echo "    \$ rm -rf examples"
  echo "    \$ cvs co SoXtExamples"
  echo ""
  echo "  You can also run configure with the option --with-auto-cvs-update"
  echo "  to allow the configure script to try to take care of this.  This"
  echo "  option is very experimental and should not be used if you use"
  echo "  configure in a way that may be considered \"weird\" in any way."
  echo ""
  sim_ac_cvs_syncproblem=true
fi

if test "x$sim_ac_cvs_syncproblem" = "xtrue"; then
  exit
fi

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

SOXT_MAJOR_VERSION=0
SOXT_MINOR_VERSION=2
SOXT_MICRO_VERSION=0
SOXT_INTERFACE_AGE=0
SOXT_BINARY_AGE=0
SOXT_VERSION=$SOXT_MAJOR_VERSION.$SOXT_MINOR_VERSION.$SOXT_MICRO_VERSION

AC_SUBST(SOXT_MAJOR_VERSION)
AC_SUBST(SOXT_MINOR_VERSION)
AC_SUBST(SOXT_MICRO_VERSION)
AC_SUBST(SOXT_VERSION)
AC_SUBST(SOXT_INTERFACE_AGE)
AC_SUBST(SOXT_BINARY_AGE)

LT_RELEASE=$SOXT_MAJOR_VERSION.$SOXT_MINOR_VERSION
LT_CURRENT=`expr $SOXT_MICRO_VERSION - $SOXT_INTERFACE_AGE`
LT_REVISION=$SOXT_INTERFACE_AGE
LT_AGE=`expr $SOXT_BINARY_AGE - $SOXT_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SOXT_VERSION

AC_DEFINE_UNQUOTED(SOXT_MAJOR_VERSION, $SOXT_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(SOXT_MINOR_VERSION, $SOXT_MINOR_VERSION)
AC_DEFINE_UNQUOTED(SOXT_MICRO_VERSION, $SOXT_MICRO_VERSION)
AC_DEFINE_UNQUOTED(SOXT_VERSION, "$SOXT_VERSION")

dnl ************************************************************************

AM_INIT_AUTOMAKE(libSoXt,$SOXT_VERSION)
AM_CONFIG_HEADER(config.h)

AM_DISABLE_STATIC
AM_MAINTAINER_MODE
AC_PROG_LIBTOOL

dnl * The ld tests generates an a.out file that isn't removed afterwards,
dnl * which is very annoying for a bloke like me, so we remove it manually...
rm -f a.out

SIM_RTTI_SUPPORT
SIM_EXCEPTION_HANDLING

dnl *******************************************************************
dnl * Search for and set up stuff we depend on.
dnl *******************************************************************

SIM_CHECK_DL([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_dl_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_dl_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_dl_libs $SOXT_EXTRA_LIBS"
])

SIM_CHECK_X11([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_x11_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_x11_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_x11_libs $SOXT_EXTRA_LIBS"
])

if test x"$sim_ac_x11_avail" = xyes; then
  SIM_CHECK_LIBXPM([
    SOXT_EXTRA_LIBS="$sim_ac_xpm_libs $SOXT_EXTRA_LIBS"
    AC_DEFINE(HAVE_LIBXPM, 1, [Define this to use libXpm])
  ])
  SIM_CHECK_X11SHMEM([
    SOXT_EXTRA_LIBS="$sim_ac_x11shmem_libs $SOXT_EXTRA_LIBS"
  ])
  SIM_CHECK_X11MU([
    SOXT_EXTRA_LIBS="$sim_ac_x11mu_libs $SOXT_EXTRA_LIBS"
  ])
  SIM_CHECK_X11XID([
    SOXT_EXTRA_LIBS="$sim_ac_x11mu_libs $SOXT_EXTRA_LIBS"
  ])
  SIM_CHECK_X_INTRINSIC([
    SOXT_EXTRA_LIBS="$sim_ac_xt_libs $SOXT_EXTRA_LIBS"
  ])
fi

SIM_CHECK_OPENGL([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_gl_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_gl_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_gl_libs $SOXT_EXTRA_LIBS"
], AC_MSG_ERROR(needs an OpenGL-compatible development system installation))


if test x"${with_inventor+set}" = x"set"; then
  # check for SGI or TGS Open Inventor
  SIM_CHECK_INVENTOR([
    SOXT_EXTRA_CPPFLAGS="$sim_ac_oiv_cppflags $SOXT_EXTRA_CPPFLAGS"
    SOXT_EXTRA_LDFLAGS="$sim_ac_oiv_ldflags $SOXT_EXTRA_LDFLAGS"
    SOXT_EXTRA_LIBS="$sim_ac_oiv_wlibs $SOXT_EXTRA_LIBS"
  ], AC_MSG_ERROR([couldn't compile and link against Open Inventor]))
else
  # check for Coin library and its dependencies
  SIM_CHECK_COIN([
    SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_coin_cppflags"
    SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_coin_ldflags"
    SOXT_EXTRA_LIBS="$sim_ac_coin_libs $SOXT_EXTRA_LIBS"
  ],[
    AC_MSG_ERROR(couldn't compile and link against Coin)
  ],[
    default searchprefix
  ])
fi

dnl Check for the availability of this node (it is used in the hidden
dnl line rendering), which is not part of older Inventor implementations.
SIM_HAVE_SOPOLYGONOFFSET

SIM_CHECK_MOTIF([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_motif_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_motif_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_motif_libs $SOXT_EXTRA_LIBS"
], AC_MSG_ERROR([couldn't compile and link with Motif]))

SIM_CHECK_MOTIF_GLWIDGET([
  SOXT_EXTRA_LIBS="-l$sim_ac_motif_glwidget_library $SOXT_EXTRA_LIBS"
], AC_MSG_ERROR([couldn't find Xt/Motif support for GL]))

CXXFLAGS="$CXXFLAGS -DSOXT_DEBUG=1"

dnl ************************************************************************

dnl * --with-test-code is a silent option
AM_CONDITIONAL(BUILD_TESTS, test "x${with_test_code+set}" = "xset")

dnl * --with-ivexamples is a silent option
sim_ac_ivexamples_available=no
if test x"${with_ivexamples+set}" = x"set"; then
  AC_MSG_CHECKING([for ivexamples directory])
  if test -f ${srcdir}/ivexamples/configure.in; then
    AC_MSG_RESULT([found])
    sim_ac_ivexamples_available=yes
  else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([can't honour '--with-ivexamples' when ivexamples/ doesn't exist])
  fi
fi

AM_CONDITIONAL(BUILD_EXAMPLES, true)
AM_CONDITIONAL(BUILD_IV_EXAMPLES, test x"$sim_ac_ivexamples_available" = xyes)


dnl *******************************************************************
dnl * Variable substitutions for using libSoXt in the generic code.
dnl *******************************************************************

. ${srcdir}/libconfigvars.sh

AC_SUBST(GUI)
AC_SUBST(lGUI)
AC_SUBST(uGUI)
AC_SUBST(WIDGET)
AC_SUBST(EVENT)
AC_SUBST(COMPONENTHEADER)

dnl *******************************************************************
dnl * Configure the submodule with the examples.
dnl *******************************************************************

# soxt-config
AC_SUBST(SOXT_EXTRA_CPPFLAGS)
AC_SUBST(SOXT_EXTRA_LDFLAGS)
AC_SUBST(SOXT_EXTRA_LIBS)

sim_ac_subconfig=examples
if test x"$sim_ac_ivexamples_available" = xyes; then
  sim_ac_subconfig="$sim_ac_subconfig ivexamples"
fi
AC_CONFIG_SUBDIRS($sim_ac_subconfig)

SIM_EXPAND_DIR_VARS

dnl ************************************************************************
dnl * finally generate all the directories, makefiles, autogenerated
dnl * sourcefiles, and config headers.
dnl ************************************************************************

dnl * automake bugfix
test -d src || mkdir src
test -d src/Inventor || mkdir src/Inventor
test -d src/Inventor/Xt || mkdir src/Inventor/Xt

AC_OUTPUT([
	Makefile
	soxt-config
	src/Inventor/Xt/Makefile
	src/Inventor/Xt/devices/Makefile
	src/Inventor/Xt/viewers/Makefile
	src/Inventor/Xt/widgets/Makefile
	test-code/Makefile
	test-code/bugs/Makefile
	test-code/widgets/Makefile
],[
	chmod a+x soxt-config
])

echo ""
echo "Now, run 'make install' to build and install So$GUI."
echo ""

dnl ************************************************************************
