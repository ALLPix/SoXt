# **************************************************************************
# SoXt/configure.in

AC_INIT(src/Inventor/Xt/SoXt.h) # any typical file for source archive

# **************************************************************************
# Apply changes to the CVS repository structure...

sim_ac_cvs_syncproblem=false;

sim_ac_data_check_file=${srcdir}/data/configure.in

if test ! -f $sim_ac_data_check_file; then
  if test "x${with_auto_cvs_update+set}" = "xset"; then
    echo "Trying to honor the --with-auto-cvs-update option."
    sim_ac_save_cwd="`pwd`"
    cd ${srcdir}
    if test -d ./data -o ! -f ./CVS/Entries; then
      AC_MSG_ERROR([something failed horribly - can't do auto-cvs-update])
    fi
    cvs co SoXtData
    cd ${sim_ac_save_cwd}
    echo "Done.  Proceeding..."
  fi
fi

if test ! -f $sim_ac_data_check_file; then
  cat <<EOF

  You appear to have an old setup of the SoXt source repository.
  Parts of it have changed structurally, and you need to do the
  following in the SoXt source directory:

    $ cvs co SoXtData

  You can also run configure with the option --with-auto-cvs-update
  to allow the configure script to try to take care of this.  This
  option is very experimental and should not be used if you use
  configure in a way that may be considered "weird" in any way.

EOF
  sim_ac_cvs_syncproblem=true
fi

if test "x$sim_ac_cvs_syncproblem" = "xtrue"; then
  exit 1
fi

# **************************************************************************

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

SOXT_MAJOR_VERSION=0
SOXT_MINOR_VERSION=5
SOXT_MICRO_VERSION=0
SOXT_INTERFACE_AGE=0
SOXT_BINARY_AGE=0
SOXT_VERSION=$SOXT_MAJOR_VERSION.$SOXT_MINOR_VERSION.$SOXT_MICRO_VERSION

AC_SUBST(SOXT_MAJOR_VERSION)
AC_SUBST(SOXT_MINOR_VERSION)
AC_SUBST(SOXT_MICRO_VERSION)
AC_SUBST(SOXT_VERSION)
AC_SUBST(SOXT_INTERFACE_AGE)
AC_SUBST(SOXT_BINARY_AGE)

LT_RELEASE=$SOXT_MAJOR_VERSION.$SOXT_MINOR_VERSION
LT_CURRENT=`expr $SOXT_MICRO_VERSION - $SOXT_INTERFACE_AGE`
LT_REVISION=$SOXT_INTERFACE_AGE
LT_AGE=`expr $SOXT_BINARY_AGE - $SOXT_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SOXT_VERSION

AC_DEFINE_UNQUOTED(SOXT_MAJOR_VERSION, $SOXT_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(SOXT_MINOR_VERSION, $SOXT_MINOR_VERSION)
AC_DEFINE_UNQUOTED(SOXT_MICRO_VERSION, $SOXT_MICRO_VERSION)
AC_DEFINE_UNQUOTED(SOXT_VERSION, "$SOXT_VERSION")

# **************************************************************************

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(libSoXt, $SOXT_VERSION)
AM_CONFIG_HEADER(config.h)

AM_DISABLE_STATIC
AM_MAINTAINER_MODE
AC_PROG_LIBTOOL

SIM_AC_RTTI_SUPPORT
SIM_EXCEPTION_HANDLING
SIM_AC_CHECK_VAR_FUNCTIONNAME
SIM_PROFILING_SUPPORT
SIM_COMPILE_DEBUG(
  [CPPFLAGS="$CPPFLAGS -DSOXT_DEBUG=1"],
  [CPPFLAGS="$CPPFLAGS -DSOXT_DEBUG=0"])
SIM_COMPILER_WARNINGS

# **************************************************************************
# Search for and set up stuff we depend on.

SIM_CHECK_DL([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_dl_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_dl_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_dl_libs $SOXT_EXTRA_LIBS"
])

SIM_CHECK_X11([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_x11_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_x11_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_x11_libs $SOXT_EXTRA_LIBS"
])

if test x"$sim_ac_x11_avail" = xyes; then
  SIM_CHECK_LIBXPM([
    SOXT_EXTRA_LIBS="$sim_ac_xpm_libs $SOXT_EXTRA_LIBS"
    AC_DEFINE(HAVE_LIBXPM, 1, [Define this to use libXpm])
  ])
  SIM_CHECK_X11SHMEM([
    SOXT_EXTRA_LIBS="$sim_ac_x11shmem_libs $SOXT_EXTRA_LIBS"
  ])
  SIM_CHECK_X11MU([
    SOXT_EXTRA_LIBS="$sim_ac_x11mu_libs $SOXT_EXTRA_LIBS"
  ])
  SIM_CHECK_X11XID([
    SOXT_EXTRA_LIBS="$sim_ac_x11mu_libs $SOXT_EXTRA_LIBS"
  ])
  # Open Group Motif depends on the Xp printing library (at least
  # on some platforms).
  SIM_AC_CHECK_X11_XP([
    SOXT_EXTRA_LIBS="$sim_ac_xp_libs $SOXT_EXTRA_LIBS"
  ])
  SIM_CHECK_X_INTRINSIC([
    SOXT_EXTRA_LIBS="$sim_ac_xt_libs $SOXT_EXTRA_LIBS"
  ])
else
  AC_MSG_ERROR(need to able to compile and link against X11 libraries)
fi

SIM_AC_CHECK_OPENGL([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_gl_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_gl_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_gl_libs $SOXT_EXTRA_LIBS"
], AC_MSG_ERROR(needs an OpenGL-compatible development system installation))

if test x"${with_inventor+set}" = x"set"; then
  # check for SGI or TGS Open Inventor
  SIM_CHECK_INVENTOR([
    SOXT_EXTRA_CPPFLAGS="$sim_ac_oiv_cppflags $SOXT_EXTRA_CPPFLAGS"
    SOXT_EXTRA_LDFLAGS="$sim_ac_oiv_ldflags $SOXT_EXTRA_LDFLAGS"
    SOXT_EXTRA_LIBS="$sim_ac_oiv_wlibs $SOXT_EXTRA_LIBS"
  ], AC_MSG_ERROR([couldn't compile and link against Open Inventor]))
else
  # check for Coin library and its dependencies
  SIM_AC_HAVE_COIN_IFELSE([
    SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_coin_cppflags"
    SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_coin_ldflags"
    SOXT_EXTRA_LIBS="$sim_ac_coin_libs $SOXT_EXTRA_LIBS"
  ], AC_MSG_ERROR(couldn't compile and link against Coin))
fi

# Check for the availability of this node (it is used in the hidden
# line rendering), which is not part of older Inventor implementations.
SIM_HAVE_SOPOLYGONOFFSET

SIM_CHECK_MOTIF([
  SOXT_EXTRA_CPPFLAGS="$SOXT_EXTRA_CPPFLAGS $sim_ac_motif_cppflags"
  SOXT_EXTRA_LDFLAGS="$SOXT_EXTRA_LDFLAGS $sim_ac_motif_ldflags"
  SOXT_EXTRA_LIBS="$sim_ac_motif_libs $SOXT_EXTRA_LIBS"
], AC_MSG_ERROR([couldn't compile and link with Motif]))

SIM_AC_CHECK_JOYSTICK_LINUX([
  AC_DEFINE(HAVE_JOYSTICK_LINUX, ,
    [Define to enable Linux Joystick driver support])
  AC_DEFINE_UNQUOTED(SOXT_LINUX_JOYSTICK_DEVICE,
    "$sim_ac_joystick_linux_device",
    [Define this to device handle to fallback on])
])
AM_CONDITIONAL(HAVE_JOYSTICK_LINUX, $sim_ac_joystick_linux_avail)

CXXFLAGS="$CXXFLAGS -DSOXT_INTERNAL=1"

# **************************************************************************

# --with-test-code is a silent option
AM_CONDITIONAL(BUILD_TESTS, false) # test "x${with_test_code+set}" = "xset")

# --with-ivexamples is a silent option
sim_ac_want_ivexamples=false
if test x"${with_ivexamples+set}" = x"set"; then
  AC_MSG_CHECKING([for ivexamples directory])
  if test -f ${srcdir}/ivexamples/configure.in; then
    AC_MSG_RESULT([found])
    sim_ac_want_ivexamples=true
  else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([can't use '--with-ivexamples' when ivexamples/ doesn't exist])
  fi
fi

# --with-devcode is a silent option
sim_ac_want_devcode=false
if test x"${with_devcode+set}" = x"set"; then
  AC_MSG_CHECKING([for devcode directory])
  if test -f ${srcdir}/devcode/configure.in; then
    AC_MSG_RESULT([found])
    sim_ac_want_devcode=true
  else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([can't use '--with-devcode' when devcode/ doesn't exist])
  fi
fi

SIM_AC_SOGUI_STATIC_DEFAULTS

AM_CONDITIONAL(BUILD_DEVCODE, $sim_ac_want_devcode)
AM_CONDITIONAL(BUILD_EXAMPLES, $sim_ac_want_examples)
AM_CONDITIONAL(BUILD_IV_EXAMPLES, $sim_ac_want_ivexamples)

# **************************************************************************
# Variable substitutions for using libSoXt in the generic code.

. ${srcdir}/libconfigvars.sh

AC_SUBST(GUI)
AC_SUBST(Gui)
AC_SUBST(gui)
AC_SUBST(WIDGET)
AC_SUBST(EVENT)
AC_SUBST(COMPONENTHEADER)

# **************************************************************************
# Section for Doxygen

AC_ARG_WITH(
  html,
  AC_HELP_STRING([--with-html], [build and install SoXt HTML documentation]),
  [case "${withval}" in
    yes) want_html=yes ;;
    no)  want_html=no ;;
    *)   AC_MSG_ERROR(bad value "${withval}" for --with-html) ;;
  esac],
  [want_html=no])

AC_ARG_WITH(
  man,
  AC_HELP_STRING([--with-man], [build and install SoXt man pages]),
  [case "${withval}" in
    yes) want_man=yes ;;
    no)  want_man=no ;;
    *)   AC_MSG_ERROR(bad value "${withval}" for --with-man) ;;
  esac],
  [want_man=no])

SOXT_DOC_HTML=`echo $want_html | tr a-z A-Z`
SOXT_DOC_MAN=`echo $want_man | tr a-z A-Z`
AC_SUBST(SOXT_DOC_HTML)
AC_SUBST(SOXT_DOC_MAN)

soxt_build_dir=`pwd`
cd $srcdir
soxt_src_dir=`pwd`
cd $soxt_build_dir
soxt_data_dir=/usr/local/share/Coin
test x"$exec_prefix" != xNONE && soxt_data_dir=$exec_prefix/share/Coin

AC_SUBST(soxt_src_dir)
AC_SUBST(soxt_build_dir)
AC_SUBST(soxt_data_dir)

if test x"$want_html" != xno -o x"$want_man" != xno; then
  SIM_AC_DOXYGEN_TOOL(,
    AC_MSG_ERROR([Could not find the doxygen tool -- see http://www.stack.nl/~dimitri/doxygen/]))
  sim_ac_doxygen_our_version=1.1.5
  if test x"$sim_ac_doxygen_avail" != x"$sim_ac_doxygen_our_version"; then
    AC_MSG_WARN(You are not using Doxygen version $sim_ac_doxygen_our_version)
  fi

  AC_PATH_PROG(sim_ac_perl_exe, perl, false, $PATH)
  if test x"$sim_ac_perl_exe" = xfalse; then
    AC_MSG_WARN(Could not find the Perl executable)
  fi
  AC_SUBST(sim_ac_perl_exe)
fi

# **************************************************************************
# For the soqt.spec RPM specification file.

SIM_AC_ISO8601_DATE(soxt_configure_date)
AC_SUBST(soxt_configure_date)

# **************************************************************************
# Configure the submodule with the examples.

# soxt-config
AC_SUBST(SOXT_EXTRA_CPPFLAGS)
AC_SUBST(SOXT_EXTRA_LDFLAGS)
AC_SUBST(SOXT_EXTRA_LIBS)

SIM_EXPAND_DIR_VARS

AC_CONFIG_SUBDIRS(data)

# **************************************************************************
# generate the makefiles and config files.

AC_OUTPUT([
	Makefile
	soxt-config
	src/Inventor/Xt/Makefile
	src/Inventor/Xt/devices/Makefile
	src/Inventor/Xt/widgets/Makefile
	src/Inventor/Xt/viewers/Makefile
	build/soxt.spec
	build/soxt.doxygen
], [
	chmod a+x soxt-config
])

if test -d ${srcdir}/examples; then
  cat <<EOF

  ATTENTION:  You can remove the 'examples' directory from So$Gui.  It has
  been obsoleted by the stand-alone module 'SoGuiExamples'.
EOF
fi

cat <<EOF

Now, run 'make install' to build and install So$Gui.

EOF

# **************************************************************************
